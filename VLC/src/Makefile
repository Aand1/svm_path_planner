# Makefile.in generated by automake 1.8.5 from Makefile.am.
# modules/access/dshow/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# modules/access/dshow/Makefile.am automatically generated from modules/access/dshow/Modules.am by bootstrap
# DO NOT EDIT - edit Modules.am or $(top_srcdir)/bootstrap instead

SOURCES = $(libdshow_a_SOURCES) $(libdshow_pic_a_SOURCES) $(libdshow_plugin_a_SOURCES) $(libdshow_builtin_la_SOURCES) $(libdshow_plugin_la_SOURCES)

srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/vlc
pkglibdir = $(libdir)/vlc
pkgincludedir = $(includedir)/vlc
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-mingw32
host_triplet = i686-pc-mingw32
target_triplet = i686-pc-mingw32
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Modules.am
subdir = modules/access/dshow
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/codeset.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/glibc21.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intdiv0.m4 \
	$(top_srcdir)/m4/inttypes-pri.m4 $(top_srcdir)/m4/inttypes.m4 \
	$(top_srcdir)/m4/inttypes_h.m4 $(top_srcdir)/m4/lcmessage.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/private.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/stdint_h.m4 \
	$(top_srcdir)/m4/uintmax_t.m4 $(top_srcdir)/m4/ulonglong.m4 \
	$(top_srcdir)/m4/vlc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/autotools/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
ARFLAGS = cru
libdshow_a_AR = $(AR) $(ARFLAGS)
libdshow_a_LIBADD =
am__objects_1 = libdshow_a-dshow.$(OBJEXT) libdshow_a-filter.$(OBJEXT) \
	libdshow_a-crossbar.$(OBJEXT)
am_libdshow_a_OBJECTS = $(am__objects_1)
libdshow_a_OBJECTS = $(am_libdshow_a_OBJECTS)
libdshow_pic_a_AR = $(AR) $(ARFLAGS)
libdshow_pic_a_LIBADD =
am__objects_2 = libdshow_pic_a-dshow.$(OBJEXT) \
	libdshow_pic_a-filter.$(OBJEXT) \
	libdshow_pic_a-crossbar.$(OBJEXT)
am_libdshow_pic_a_OBJECTS = $(am__objects_2)
libdshow_pic_a_OBJECTS = $(am_libdshow_pic_a_OBJECTS)
libdshow_plugin_a_AR = $(AR) $(ARFLAGS)
libdshow_plugin_a_LIBADD =
am__objects_3 = libdshow_plugin_a-dshow.$(OBJEXT) \
	libdshow_plugin_a-filter.$(OBJEXT) \
	libdshow_plugin_a-crossbar.$(OBJEXT)
am_libdshow_plugin_a_OBJECTS = $(am__objects_3)
libdshow_plugin_a_OBJECTS = $(am_libdshow_plugin_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(libvlcdir)"
libvlcLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(libvlc_LTLIBRARIES) $(noinst_LTLIBRARIES)
libdshow_builtin_la_LIBADD =
am__objects_4 = libdshow_builtin_la-dshow.lo \
	libdshow_builtin_la-filter.lo libdshow_builtin_la-crossbar.lo
am_libdshow_builtin_la_OBJECTS = $(am__objects_4)
libdshow_builtin_la_OBJECTS = $(am_libdshow_builtin_la_OBJECTS)
am__DEPENDENCIES_1 = $(top_builddir)/src/libvlc.la
libdshow_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_5 = libdshow_plugin_la-dshow.lo \
	libdshow_plugin_la-filter.lo libdshow_plugin_la-crossbar.lo
am_libdshow_plugin_la_OBJECTS = $(am__objects_5)
libdshow_plugin_la_OBJECTS = $(am_libdshow_plugin_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/libdshow_a-crossbar.Po \
	./$(DEPDIR)/libdshow_a-dshow.Po \
	./$(DEPDIR)/libdshow_a-filter.Po \
	./$(DEPDIR)/libdshow_builtin_la-crossbar.Plo \
	./$(DEPDIR)/libdshow_builtin_la-dshow.Plo \
	./$(DEPDIR)/libdshow_builtin_la-filter.Plo \
	./$(DEPDIR)/libdshow_pic_a-crossbar.Po \
	./$(DEPDIR)/libdshow_pic_a-dshow.Po \
	./$(DEPDIR)/libdshow_pic_a-filter.Po \
	./$(DEPDIR)/libdshow_plugin_a-crossbar.Po \
	./$(DEPDIR)/libdshow_plugin_a-dshow.Po \
	./$(DEPDIR)/libdshow_plugin_a-filter.Po \
	./$(DEPDIR)/libdshow_plugin_la-crossbar.Plo \
	./$(DEPDIR)/libdshow_plugin_la-dshow.Plo \
	./$(DEPDIR)/libdshow_plugin_la-filter.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libdshow_a_SOURCES) $(libdshow_pic_a_SOURCES) \
	$(libdshow_plugin_a_SOURCES) $(libdshow_builtin_la_SOURCES) \
	$(libdshow_plugin_la_SOURCES)
DIST_SOURCES = $(libdshow_a_SOURCES) $(libdshow_pic_a_SOURCES) \
	$(libdshow_plugin_a_SOURCES) $(libdshow_builtin_la_SOURCES) \
	$(libdshow_plugin_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/neztol/vlc2/autotools/missing --run aclocal-1.8
ALIASES =  wxvlc
ALLOCA = 
ALL_LINGUAS = ca da de en_GB es fr gl he hi hu it ja ka ko nl oc pt_BR ro ru sv tr zh_CN zh_TW
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/neztol/vlc2/autotools/missing --run tar
AR = ar
ARCH = i686 mmx
ARTS_CONFIG = 
AS = as
ASM = 
AUTOCONF = ${SHELL} /home/neztol/vlc2/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /home/neztol/vlc2/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /home/neztol/vlc2/autotools/missing --run automake-1.8
AWK = gawk
BONJOUR_CFLAGS = 
BONJOUR_LIBS = 
BUILD_ACTIVEX_FALSE = 
BUILD_ACTIVEX_TRUE = #
BUILD_DIRENT_FALSE = 
BUILD_DIRENT_TRUE = #
BUILD_GETOPT_FALSE = #
BUILD_GETOPT_TRUE = 
BUILD_INCLUDED_LIBINTL = no
BUILD_JAVA_FALSE = 
BUILD_JAVA_TRUE = #
BUILD_MOZILLA_FALSE = 
BUILD_MOZILLA_TRUE = #
BUILD_PIC_FALSE = 
BUILD_PIC_TRUE = #
BUILD_PYTHON_FALSE = 
BUILD_PYTHON_TRUE = #
BUILD_SHARED_FALSE = #
BUILD_SHARED_TRUE = 
CACA_CONFIG = 
CATOBJEXT = 
CC = gcc
CCAS = gcc
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -Wsign-compare -Wall  -mms-bitfields -pipe
CORBA_CFLAGS = 
CORBA_LIBS = 
CPP = gcc -E
CPPFLAGS = -I/win32/include -I/win32/include/ebml -I/mingw/include -I/include -D_OFF_T_ -D_off_t=long -DSYS_MINGW32 -I$(top_srcdir)/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wsign-compare -Wsign-compare -Wall  -mms-bitfields -pipe
CYGPATH = 
CYGPATH_W = echo
DAAP_CFLAGS = 
DAAP_LIBS = 
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIRAC_CFLAGS = 
DIRAC_LIBS = 
DLLTOOL = dlltool
DVDNAV_CONFIG = no
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_CORBA_FALSE = 
ENABLE_CORBA_TRUE = #
ESD_CONFIG = 
EXEEXT = .exe
F77 = g77
FFLAGS = -g -O2
FFMPEG_CFLAGS = 
FFMPEG_CONFIG = 
FFMPEG_LIBS = 
FILE_LIBVLC_DLL = !define LIBVLC_DLL libvlc.dll
FREETYPE_CONFIG = no
FRIBIDI_CONFIG = no
GENCAT = gencat
GLIBC21 = no
GMSGFMT = /mingw/bin/msgfmt
GNOMEVFS_CFLAGS = 
GNOMEVFS_LIBS = 
GTK2_CFLAGS = 
GTK2_LIBS = 
HAL_CFLAGS = 
HAL_LIBS = 
HAS_MIDL_COMPILER_FALSE = #
HAS_MIDL_COMPILER_TRUE = 
HAVE_BEOS_FALSE = 
HAVE_BEOS_TRUE = #
HAVE_BUILTINS_FALSE = #
HAVE_BUILTINS_TRUE = 
HAVE_DARWIN_FALSE = 
HAVE_DARWIN_TRUE = #
HAVE_PLUGINS_FALSE = #
HAVE_PLUGINS_TRUE = 
HAVE_WIN32_FALSE = #
HAVE_WIN32_TRUE = 
HAVE_WINCE_FALSE = 
HAVE_WINCE_TRUE = #
INCLUDED_LIBINTL = 
INCLUDES = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = :
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
LD = ld
LDFLAGS = -L/win32/lib -L/mingw/lib -L/lib
LIBCDDB_CFLAGS = 
LIBCDDB_LIBS = 
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBCDIO_PARANOIA_CFLAGS = 
LIBCDIO_PARANOIA_LIBS = 
LIBEXT = .dll
LIBICONV = /win32/lib/libiconv.a -L/usr/win32/lib
LIBINTL = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LOADER_FALSE = 
LOADER_TRUE = #
LTLIBICONV = -L/win32/lib -liconv -L/usr/win32/lib
LTLIBINTL = 
LTLIBOBJS = 
MACOSX_DEPLOYMENT_TARGET = 
MAINT = 
MAINTAINER_MODE_FALSE = #
MAINTAINER_MODE_TRUE = 
MAKEINFO = ${SHELL} /home/neztol/vlc2/autotools/missing --run makeinfo
MIDL = 
MKINSTALLDIRS = autotools/mkinstalldirs
MOC = 
MOZILLA_CONFIG = 
MOZILLA_SDK_PATH = 
MSGFMT = /mingw/bin/msgfmt
MSGMERGE = /mingw/bin/msgmerge
OBJC = g++
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -Wsign-compare -Wall  -pipe
OBJDUMP = objdump
OBJEXT = o
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 0.8.5
PACKAGE_TARNAME = vlc
PACKAGE_VERSION = 0.8.5
PATH_SEPARATOR = :
PKG_CONFIG = 
POSTPROC_CFLAGS = 
POSTPROC_LIBS = 
POSUB = 
RANLIB = ranlib
SDL11_CONFIG = 
SDL12_CONFIG = 
SDL_CONFIG = 
SET_MAKE = 
SHELL = /bin/sh
SHOUT_CFLAGS = 
SHOUT_LIBS = 
STRIP = strip
SVG_CFLAGS = 
SVG_LIBS = 
SYMPREF = _
SYS = mingw32
USE_INCLUDED_LIBINTL = no
USE_LIBTOOL_FALSE = 
USE_LIBTOOL_TRUE = #
USE_NLS = no
VCDINFO_CFLAGS = 
VCDINFO_LIBS = 
VERSION = 0.8.5
VERSION_MAJOR = 0
VERSION_MINOR = 8
VERSION_REVISION = 5
VLC_CONFIG = top_builddir="$(top_builddir)" $(top_builddir)/vlc-config
VLC_ENTRY = vlc_entry__0_8_5
WINDRES = windres
WX_CONFIG = /usr/win32/bin/wx-config
XGETTEXT = /mingw/bin/xgettext --keyword=_NS --keyword=_ANS
XML2_CONFIG = no
XPIDL = 
XPIDL_INCL = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_AR = ar
ac_ct_AS = as
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_CYGPATH = 
ac_ct_DLLTOOL = dlltool
ac_ct_F77 = g77
ac_ct_LD = ld
ac_ct_OBJDUMP = objdump
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_ct_WINDRES = windres
ac_pt_PKG_CONFIG = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__fastdepOBJC_FALSE = #
am__fastdepOBJC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-mingw32
build_alias = 
build_cpu = i686
build_os = mingw32
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = 
host_cpu = i686
host_os = mingw32
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/neztol/vlc2/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
pic = 
prefix = /win32
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-mingw32
target_alias = 
target_cpu = i686
target_os = mingw32
target_vendor = pc
basedir = access
mods = dshow
NULL = 
libvlc_LTLIBRARIES = 
noinst_LTLIBRARIES = 
EXTRA_DIST = Modules.am
BUILT_SOURCES = 
clean_modules = 
SUBDIRS = 
SUFFIXES = _plugin$(LIBEXT) _plugin.a
libvlcdir = $(libdir)/vlc/$(basedir)
EXTRA_LIBRARIES = libdshow_plugin.a libdshow.a libdshow_pic.a
EXTRA_LTLIBRARIES = libdshow_plugin.la libdshow_builtin.la
SOURCES_dshow = dshow.cpp common.h filter.cpp filter.h crossbar.cpp
LTLIBVLC = $(top_builddir)/src/libvlc.la
LIBVLC = $(top_builddir)/src/libvlc$(LIBEXT)
LIBADD = $(LIBVLC)

# The dshow plugin
libdshow_plugin_a_SOURCES = $(SOURCES_dshow)
libdshow_plugin_la_SOURCES = $(SOURCES_dshow)
libdshow_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin dshow`
libdshow_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin dshow`
libdshow_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin dshow`
libdshow_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin dshow`
libdshow_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin dshow`
libdshow_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin dshow`
libdshow_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin dshow` \
	-rpath '$(libvlcdir)' -module -shrext $(LIBEXT)

libdshow_plugin_la_LIBADD = $(LTLIBVLC)
libdshow_pic_a_SOURCES = $(SOURCES_dshow)
libdshow_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic dshow`
libdshow_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic dshow`
libdshow_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic dshow`
libdshow_a_SOURCES = $(SOURCES_dshow)
libdshow_builtin_la_SOURCES = $(SOURCES_dshow)
libdshow_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin dshow`
libdshow_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin dshow`
libdshow_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin dshow`
libdshow_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin dshow`
libdshow_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin dshow`
libdshow_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin dshow`
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: _plugin$(LIBEXT) _plugin.a .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Modules.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  modules/access/dshow/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  modules/access/dshow/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
libdshow.a: $(libdshow_a_OBJECTS) $(libdshow_a_DEPENDENCIES) 
	-rm -f libdshow.a
	$(libdshow_a_AR) libdshow.a $(libdshow_a_OBJECTS) $(libdshow_a_LIBADD)
	$(RANLIB) libdshow.a
libdshow_pic.a: $(libdshow_pic_a_OBJECTS) $(libdshow_pic_a_DEPENDENCIES) 
	-rm -f libdshow_pic.a
	$(libdshow_pic_a_AR) libdshow_pic.a $(libdshow_pic_a_OBJECTS) $(libdshow_pic_a_LIBADD)
	$(RANLIB) libdshow_pic.a
libdshow_plugin.a: $(libdshow_plugin_a_OBJECTS) $(libdshow_plugin_a_DEPENDENCIES) 
	-rm -f libdshow_plugin.a
	$(libdshow_plugin_a_AR) libdshow_plugin.a $(libdshow_plugin_a_OBJECTS) $(libdshow_plugin_a_LIBADD)
	$(RANLIB) libdshow_plugin.a
install-libvlcLTLIBRARIES: $(libvlc_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libvlcdir)" || $(mkdir_p) "$(DESTDIR)$(libvlcdir)"
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libvlcLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libvlcdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libvlcLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libvlcdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libvlcLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libvlcdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libvlcdir)/$$p"; \
	done

clean-libvlcLTLIBRARIES:
	-test -z "$(libvlc_LTLIBRARIES)" || rm -f $(libvlc_LTLIBRARIES)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libdshow_builtin.la: $(libdshow_builtin_la_OBJECTS) $(libdshow_builtin_la_DEPENDENCIES) 
	$(CXXLINK)  $(libdshow_builtin_la_LDFLAGS) $(libdshow_builtin_la_OBJECTS) $(libdshow_builtin_la_LIBADD) $(LIBS)
libdshow_plugin.la: $(libdshow_plugin_la_OBJECTS) $(libdshow_plugin_la_DEPENDENCIES) 
	$(CXXLINK)  $(libdshow_plugin_la_LDFLAGS) $(libdshow_plugin_la_OBJECTS) $(libdshow_plugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libdshow_a-crossbar.Po
include ./$(DEPDIR)/libdshow_a-dshow.Po
include ./$(DEPDIR)/libdshow_a-filter.Po
include ./$(DEPDIR)/libdshow_builtin_la-crossbar.Plo
include ./$(DEPDIR)/libdshow_builtin_la-dshow.Plo
include ./$(DEPDIR)/libdshow_builtin_la-filter.Plo
include ./$(DEPDIR)/libdshow_pic_a-crossbar.Po
include ./$(DEPDIR)/libdshow_pic_a-dshow.Po
include ./$(DEPDIR)/libdshow_pic_a-filter.Po
include ./$(DEPDIR)/libdshow_plugin_a-crossbar.Po
include ./$(DEPDIR)/libdshow_plugin_a-dshow.Po
include ./$(DEPDIR)/libdshow_plugin_a-filter.Po
include ./$(DEPDIR)/libdshow_plugin_la-crossbar.Plo
include ./$(DEPDIR)/libdshow_plugin_la-dshow.Plo
include ./$(DEPDIR)/libdshow_plugin_la-filter.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libdshow_a-dshow.o: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-dshow.o -MD -MP -MF "$(DEPDIR)/libdshow_a-dshow.Tpo" -c -o libdshow_a-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_a-dshow.Tpo" "$(DEPDIR)/libdshow_a-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_a-dshow.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_a-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_a-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_a-dshow.obj: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-dshow.obj -MD -MP -MF "$(DEPDIR)/libdshow_a-dshow.Tpo" -c -o libdshow_a-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_a-dshow.Tpo" "$(DEPDIR)/libdshow_a-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_a-dshow.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_a-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_a-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`

libdshow_a-dshow.lo: dshow.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-dshow.lo -MD -MP -MF "$(DEPDIR)/libdshow_a-dshow.Tpo" -c -o libdshow_a-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_a-dshow.Tpo" "$(DEPDIR)/libdshow_a-dshow.Plo"; else rm -f "$(DEPDIR)/libdshow_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_a-dshow.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_a-dshow.Plo' tmpdepfile='$(DEPDIR)/libdshow_a-dshow.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_a-filter.o: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-filter.o -MD -MP -MF "$(DEPDIR)/libdshow_a-filter.Tpo" -c -o libdshow_a-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_a-filter.Tpo" "$(DEPDIR)/libdshow_a-filter.Po"; else rm -f "$(DEPDIR)/libdshow_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_a-filter.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_a-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_a-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_a-filter.obj: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-filter.obj -MD -MP -MF "$(DEPDIR)/libdshow_a-filter.Tpo" -c -o libdshow_a-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_a-filter.Tpo" "$(DEPDIR)/libdshow_a-filter.Po"; else rm -f "$(DEPDIR)/libdshow_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_a-filter.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_a-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_a-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`

libdshow_a-filter.lo: filter.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-filter.lo -MD -MP -MF "$(DEPDIR)/libdshow_a-filter.Tpo" -c -o libdshow_a-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_a-filter.Tpo" "$(DEPDIR)/libdshow_a-filter.Plo"; else rm -f "$(DEPDIR)/libdshow_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_a-filter.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_a-filter.Plo' tmpdepfile='$(DEPDIR)/libdshow_a-filter.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_a-crossbar.o: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-crossbar.o -MD -MP -MF "$(DEPDIR)/libdshow_a-crossbar.Tpo" -c -o libdshow_a-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_a-crossbar.Tpo" "$(DEPDIR)/libdshow_a-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_a-crossbar.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_a-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_a-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_a-crossbar.obj: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-crossbar.obj -MD -MP -MF "$(DEPDIR)/libdshow_a-crossbar.Tpo" -c -o libdshow_a-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_a-crossbar.Tpo" "$(DEPDIR)/libdshow_a-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_a-crossbar.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_a-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_a-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`

libdshow_a-crossbar.lo: crossbar.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_a-crossbar.lo -MD -MP -MF "$(DEPDIR)/libdshow_a-crossbar.Tpo" -c -o libdshow_a-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_a-crossbar.Tpo" "$(DEPDIR)/libdshow_a-crossbar.Plo"; else rm -f "$(DEPDIR)/libdshow_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_a-crossbar.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_a-crossbar.Plo' tmpdepfile='$(DEPDIR)/libdshow_a-crossbar.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_a-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_pic_a-dshow.o: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-dshow.o -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-dshow.Tpo" -c -o libdshow_pic_a-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-dshow.Tpo" "$(DEPDIR)/libdshow_pic_a-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_pic_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_pic_a-dshow.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_pic_a-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_pic_a-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_pic_a-dshow.obj: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-dshow.obj -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-dshow.Tpo" -c -o libdshow_pic_a-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-dshow.Tpo" "$(DEPDIR)/libdshow_pic_a-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_pic_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_pic_a-dshow.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_pic_a-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_pic_a-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`

libdshow_pic_a-dshow.lo: dshow.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-dshow.lo -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-dshow.Tpo" -c -o libdshow_pic_a-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-dshow.Tpo" "$(DEPDIR)/libdshow_pic_a-dshow.Plo"; else rm -f "$(DEPDIR)/libdshow_pic_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_pic_a-dshow.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_pic_a-dshow.Plo' tmpdepfile='$(DEPDIR)/libdshow_pic_a-dshow.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_pic_a-filter.o: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-filter.o -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-filter.Tpo" -c -o libdshow_pic_a-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-filter.Tpo" "$(DEPDIR)/libdshow_pic_a-filter.Po"; else rm -f "$(DEPDIR)/libdshow_pic_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_pic_a-filter.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_pic_a-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_pic_a-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_pic_a-filter.obj: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-filter.obj -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-filter.Tpo" -c -o libdshow_pic_a-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-filter.Tpo" "$(DEPDIR)/libdshow_pic_a-filter.Po"; else rm -f "$(DEPDIR)/libdshow_pic_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_pic_a-filter.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_pic_a-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_pic_a-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`

libdshow_pic_a-filter.lo: filter.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-filter.lo -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-filter.Tpo" -c -o libdshow_pic_a-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-filter.Tpo" "$(DEPDIR)/libdshow_pic_a-filter.Plo"; else rm -f "$(DEPDIR)/libdshow_pic_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_pic_a-filter.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_pic_a-filter.Plo' tmpdepfile='$(DEPDIR)/libdshow_pic_a-filter.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_pic_a-crossbar.o: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-crossbar.o -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo" -c -o libdshow_pic_a-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo" "$(DEPDIR)/libdshow_pic_a-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_pic_a-crossbar.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_pic_a-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_pic_a-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_pic_a-crossbar.obj: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-crossbar.obj -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo" -c -o libdshow_pic_a-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo" "$(DEPDIR)/libdshow_pic_a-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_pic_a-crossbar.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_pic_a-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_pic_a-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`

libdshow_pic_a-crossbar.lo: crossbar.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_pic_a-crossbar.lo -MD -MP -MF "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo" -c -o libdshow_pic_a-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo" "$(DEPDIR)/libdshow_pic_a-crossbar.Plo"; else rm -f "$(DEPDIR)/libdshow_pic_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_pic_a-crossbar.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_pic_a-crossbar.Plo' tmpdepfile='$(DEPDIR)/libdshow_pic_a-crossbar.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_pic_a-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_plugin_a-dshow.o: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-dshow.o -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo" -c -o libdshow_plugin_a-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo" "$(DEPDIR)/libdshow_plugin_a-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_plugin_a-dshow.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_a-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_plugin_a-dshow.obj: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-dshow.obj -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo" -c -o libdshow_plugin_a-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo" "$(DEPDIR)/libdshow_plugin_a-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_plugin_a-dshow.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_a-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`

libdshow_plugin_a-dshow.lo: dshow.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-dshow.lo -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo" -c -o libdshow_plugin_a-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo" "$(DEPDIR)/libdshow_plugin_a-dshow.Plo"; else rm -f "$(DEPDIR)/libdshow_plugin_a-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_plugin_a-dshow.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_plugin_a-dshow.Plo' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-dshow.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_plugin_a-filter.o: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-filter.o -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-filter.Tpo" -c -o libdshow_plugin_a-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-filter.Tpo" "$(DEPDIR)/libdshow_plugin_a-filter.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_plugin_a-filter.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_a-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_plugin_a-filter.obj: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-filter.obj -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-filter.Tpo" -c -o libdshow_plugin_a-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-filter.Tpo" "$(DEPDIR)/libdshow_plugin_a-filter.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_plugin_a-filter.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_a-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`

libdshow_plugin_a-filter.lo: filter.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-filter.lo -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-filter.Tpo" -c -o libdshow_plugin_a-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-filter.Tpo" "$(DEPDIR)/libdshow_plugin_a-filter.Plo"; else rm -f "$(DEPDIR)/libdshow_plugin_a-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_plugin_a-filter.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_plugin_a-filter.Plo' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-filter.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_plugin_a-crossbar.o: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-crossbar.o -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo" -c -o libdshow_plugin_a-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo" "$(DEPDIR)/libdshow_plugin_a-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_plugin_a-crossbar.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_a-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_plugin_a-crossbar.obj: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-crossbar.obj -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo" -c -o libdshow_plugin_a-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo" "$(DEPDIR)/libdshow_plugin_a-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_plugin_a-crossbar.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_a-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`

libdshow_plugin_a-crossbar.lo: crossbar.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_a-crossbar.lo -MD -MP -MF "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo" -c -o libdshow_plugin_a-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo" "$(DEPDIR)/libdshow_plugin_a-crossbar.Plo"; else rm -f "$(DEPDIR)/libdshow_plugin_a-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_plugin_a-crossbar.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_plugin_a-crossbar.Plo' tmpdepfile='$(DEPDIR)/libdshow_plugin_a-crossbar.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_a-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_builtin_la-dshow.o: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-dshow.o -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo" -c -o libdshow_builtin_la-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo" "$(DEPDIR)/libdshow_builtin_la-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_builtin_la-dshow.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_builtin_la-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_builtin_la-dshow.obj: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-dshow.obj -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo" -c -o libdshow_builtin_la-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo" "$(DEPDIR)/libdshow_builtin_la-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_builtin_la-dshow.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_builtin_la-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`

libdshow_builtin_la-dshow.lo: dshow.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-dshow.lo -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo" -c -o libdshow_builtin_la-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo" "$(DEPDIR)/libdshow_builtin_la-dshow.Plo"; else rm -f "$(DEPDIR)/libdshow_builtin_la-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_builtin_la-dshow.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_builtin_la-dshow.Plo' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-dshow.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_builtin_la-filter.o: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-filter.o -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-filter.Tpo" -c -o libdshow_builtin_la-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-filter.Tpo" "$(DEPDIR)/libdshow_builtin_la-filter.Po"; else rm -f "$(DEPDIR)/libdshow_builtin_la-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_builtin_la-filter.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_builtin_la-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_builtin_la-filter.obj: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-filter.obj -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-filter.Tpo" -c -o libdshow_builtin_la-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-filter.Tpo" "$(DEPDIR)/libdshow_builtin_la-filter.Po"; else rm -f "$(DEPDIR)/libdshow_builtin_la-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_builtin_la-filter.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_builtin_la-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`

libdshow_builtin_la-filter.lo: filter.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-filter.lo -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-filter.Tpo" -c -o libdshow_builtin_la-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-filter.Tpo" "$(DEPDIR)/libdshow_builtin_la-filter.Plo"; else rm -f "$(DEPDIR)/libdshow_builtin_la-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_builtin_la-filter.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_builtin_la-filter.Plo' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-filter.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_builtin_la-crossbar.o: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-crossbar.o -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo" -c -o libdshow_builtin_la-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo" "$(DEPDIR)/libdshow_builtin_la-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_builtin_la-crossbar.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_builtin_la-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_builtin_la-crossbar.obj: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-crossbar.obj -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo" -c -o libdshow_builtin_la-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo" "$(DEPDIR)/libdshow_builtin_la-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_builtin_la-crossbar.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_builtin_la-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`

libdshow_builtin_la-crossbar.lo: crossbar.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_builtin_la-crossbar.lo -MD -MP -MF "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo" -c -o libdshow_builtin_la-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo" "$(DEPDIR)/libdshow_builtin_la-crossbar.Plo"; else rm -f "$(DEPDIR)/libdshow_builtin_la-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_builtin_la-crossbar.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_builtin_la-crossbar.Plo' tmpdepfile='$(DEPDIR)/libdshow_builtin_la-crossbar.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_builtin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_builtin_la-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_plugin_la-dshow.o: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-dshow.o -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo" -c -o libdshow_plugin_la-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo" "$(DEPDIR)/libdshow_plugin_la-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_plugin_la-dshow.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_la-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-dshow.o `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_plugin_la-dshow.obj: dshow.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-dshow.obj -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo" -c -o libdshow_plugin_la-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo" "$(DEPDIR)/libdshow_plugin_la-dshow.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_plugin_la-dshow.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_la-dshow.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-dshow.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-dshow.obj `if test -f 'dshow.cpp'; then $(CYGPATH_W) 'dshow.cpp'; else $(CYGPATH_W) '$(srcdir)/dshow.cpp'; fi`

libdshow_plugin_la-dshow.lo: dshow.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-dshow.lo -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo" -c -o libdshow_plugin_la-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo" "$(DEPDIR)/libdshow_plugin_la-dshow.Plo"; else rm -f "$(DEPDIR)/libdshow_plugin_la-dshow.Tpo"; exit 1; fi
#	source='dshow.cpp' object='libdshow_plugin_la-dshow.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_plugin_la-dshow.Plo' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-dshow.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-dshow.lo `test -f 'dshow.cpp' || echo '$(srcdir)/'`dshow.cpp

libdshow_plugin_la-filter.o: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-filter.o -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-filter.Tpo" -c -o libdshow_plugin_la-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-filter.Tpo" "$(DEPDIR)/libdshow_plugin_la-filter.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_la-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_plugin_la-filter.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_la-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-filter.o `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_plugin_la-filter.obj: filter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-filter.obj -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-filter.Tpo" -c -o libdshow_plugin_la-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-filter.Tpo" "$(DEPDIR)/libdshow_plugin_la-filter.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_la-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_plugin_la-filter.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_la-filter.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-filter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-filter.obj `if test -f 'filter.cpp'; then $(CYGPATH_W) 'filter.cpp'; else $(CYGPATH_W) '$(srcdir)/filter.cpp'; fi`

libdshow_plugin_la-filter.lo: filter.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-filter.lo -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-filter.Tpo" -c -o libdshow_plugin_la-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-filter.Tpo" "$(DEPDIR)/libdshow_plugin_la-filter.Plo"; else rm -f "$(DEPDIR)/libdshow_plugin_la-filter.Tpo"; exit 1; fi
#	source='filter.cpp' object='libdshow_plugin_la-filter.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_plugin_la-filter.Plo' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-filter.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-filter.lo `test -f 'filter.cpp' || echo '$(srcdir)/'`filter.cpp

libdshow_plugin_la-crossbar.o: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-crossbar.o -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo" -c -o libdshow_plugin_la-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo" "$(DEPDIR)/libdshow_plugin_la-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_plugin_la-crossbar.o' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_la-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-crossbar.o `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

libdshow_plugin_la-crossbar.obj: crossbar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-crossbar.obj -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo" -c -o libdshow_plugin_la-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo" "$(DEPDIR)/libdshow_plugin_la-crossbar.Po"; else rm -f "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_plugin_la-crossbar.obj' libtool=no \
#	depfile='$(DEPDIR)/libdshow_plugin_la-crossbar.Po' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-crossbar.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-crossbar.obj `if test -f 'crossbar.cpp'; then $(CYGPATH_W) 'crossbar.cpp'; else $(CYGPATH_W) '$(srcdir)/crossbar.cpp'; fi`

libdshow_plugin_la-crossbar.lo: crossbar.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libdshow_plugin_la-crossbar.lo -MD -MP -MF "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo" -c -o libdshow_plugin_la-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp; \
	then mv -f "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo" "$(DEPDIR)/libdshow_plugin_la-crossbar.Plo"; else rm -f "$(DEPDIR)/libdshow_plugin_la-crossbar.Tpo"; exit 1; fi
#	source='crossbar.cpp' object='libdshow_plugin_la-crossbar.lo' libtool=yes \
#	depfile='$(DEPDIR)/libdshow_plugin_la-crossbar.Plo' tmpdepfile='$(DEPDIR)/libdshow_plugin_la-crossbar.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdshow_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libdshow_plugin_la-crossbar.lo `test -f 'crossbar.cpp' || echo '$(srcdir)/'`crossbar.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libvlcdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-libvlcLTLIBRARIES \
	clean-local clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-libvlcLTLIBRARIES

install-exec-am: install-exec-local

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-local

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libvlcLTLIBRARIES \
	uninstall-local

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libtool clean-libvlcLTLIBRARIES \
	clean-local clean-noinstLTLIBRARIES clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-exec-local install-info install-info-am \
	install-libvlcLTLIBRARIES install-man install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-local \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-info-am \
	uninstall-libvlcLTLIBRARIES uninstall-local


all: all-modules

# Find out which modules were enabled and tell make to build them
all-modules:
#	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
#	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --list plugin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}_plugin.la;; esac; done; fi; \
#	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --list builtin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}_builtin.la;; esac; done; fi; \
#	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
#	test -z "$$fail"
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --list plugin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --list builtin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" = "pic"; then z=$$($(VLC_CONFIG) --list builtin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# Build a plugin with the adequate linker and linker's flags
_plugin.a_plugin$(LIBEXT):
	@mod="$*" ; mod=$${mod#lib} ; 	ldfl="`$(VLC_CONFIG) --libs plugin $$mod` $(LIBADD) -u $(SYMPREF)$(VLC_ENTRY)" ; 	case `$(VLC_CONFIG) --linkage $$mod` in \
	  c++)  ld="$(CXXLINK)" ;; 	  objc) ld="$(OBJCLINK)" ;; 	  c|*)  ld="$(LINK)" ;; 	esac ; 	echo $$ld $< $$ldfl ; 	$$ld $< $$ldfl
#ifneq (,$(findstring cygwin,$(host)))
#	mv -f "$@.exe" "$@"
#endif
	@if test -f "$@.exe"; then mv -f "$@.exe" "$@"; fi

$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/bootstrap
	cd $(top_srcdir) && $(SHELL) ./bootstrap

mostlyclean-local:
#	-rm -f *.la
	-rm -f *.a *$(LIBEXT)

clean-local: $(clean_modules)

### automake creates libvlcdir after running install-*-local
### so we have to create it ourselves first
install-exec-local: all-modules
#	@if test -z "$(libvlc_LTLIBRARIES)"; then 	  z=$$($(VLC_CONFIG) --list plugin); 	  m=`for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo -n " lib$${mod}_plugin.la" ;; esac; done` ; 	  test -z "$$m" ||   	    $(MAKE) $(AM_MAKEFLAGS) libvlc_LTLIBRARIES="$$m" install-libvlcLTLIBRARIES || exit $$? ; 	fi
	mkdir -p -- "$(DESTDIR)$(libvlcdir)"
	@z=$$($(VLC_CONFIG) --list plugin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo $(INSTALL_PROGRAM) "lib$${mod}_plugin$(LIBEXT)" "$(DESTDIR)$(libvlcdir)/" ; 	      $(INSTALL_PROGRAM) "lib$${mod}_plugin$(LIBEXT)" "$(DESTDIR)$(libvlcdir)/" || exit $$?; 	      ;; 	  esac; 	done
	@z=$$($(VLC_CONFIG) --list builtin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo $(INSTALL_DATA) "lib$${mod}.a" "$(DESTDIR)$(libdir)/vlc/" ; 	      $(INSTALL_DATA) "lib$${mod}.a" "$(DESTDIR)$(libdir)/vlc/" || exit $$?; 	      ;; 	  esac; 	done
#	@z=$$($(VLC_CONFIG) --list builtin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo $(INSTALL_DATA) "lib$${mod}_pic.a" "$(DESTDIR)$(libdir)/vlc/" ; 	      $(INSTALL_DATA) "lib$${mod}_pic.a" "$(DESTDIR)$(libdir)/vlc/" || exit $$?; 	      ;; 	  esac; 	done

uninstall-local:
#	@if test -z "$(libvlc_LTLIBRARIES)"; then 	  z=$$($(VLC_CONFIG) --list plugin); 	  m=`for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo -n " lib$${mod}_plugin.la" ;; esac; done` ; 	  test -z "$$m" || 	    $(MAKE) $(AM_MAKEFLAGS) libvlc_LTLIBRARIES="$$m" uninstall-libvlcLTLIBRARIES || exit $$?; 	fi
	@z=$$($(VLC_CONFIG) --list plugin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo rm -f "$(DESTDIR)$(libvlcdir)/lib$${mod}_plugin$(LIBEXT)" ; 	      rm -f "$(DESTDIR)$(libvlcdir)/lib$${mod}_plugin$(LIBEXT)" || true; 	      ;; 	  esac; 	done
	@z=$$($(VLC_CONFIG) --list builtin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo rm -f "$(DESTDIR)$(libdir)/vlc/lib$${mod}.a" ; 	      rm -f "$(DESTDIR)$(libdir)/vlc/lib$${mod}.a" || true; 	      ;; 	  esac; 	done
#	@z=$$($(VLC_CONFIG) --list builtin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo rm -f "$(DESTDIR)$(libdir)/vlc/lib$${mod}_pic.a" ; 	      rm -f "$(DESTDIR)$(libdir)/vlc/lib$${mod}_pic.a" || true; 	      ;; 	  esac; 	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
